{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name om.next.protocols, :imports nil, :requires nil, :uses nil, :defs {indexes {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 27, :column 4, :end-line 27, :end-column 11, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([this]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/indexes, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, ICommitQueue {:meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 21, :column 14, :end-line 21, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {commit! [[queue tx-data context]]}}}, :protocol-symbol true, :name om.next.protocols/ICommitQueue, :file "resources/public/js/om/next/protocols.cljs", :end-column 26, :column 1, :line 21, :protocol-info {:methods {commit! [[queue tx-data context]]}}, :info nil, :end-line 21, :impls #{}, :doc nil, :jsdoc ("@interface")}, pull {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 6, :column 4, :end-line 6, :end-column 8, :protocol om.next.protocols/IPull, :doc nil, :arglists (quote ([pullable selector context]))}, :protocol om.next.protocols/IPull, :name om.next.protocols/pull, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 8, :method-params ([pullable selector context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 6, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pullable selector context])), :doc nil}, push-async {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 15, :column 4, :end-line 15, :end-column 14, :protocol om.next.protocols/IPushAsync, :doc nil, :arglists (quote ([pushable tx-data context cb]))}, :protocol om.next.protocols/IPushAsync, :name om.next.protocols/push-async, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 14, :method-params ([pushable tx-data context cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 15, :max-fixed-arity 4, :fn-var true, :arglists (quote ([pushable tx-data context cb])), :doc nil}, IPush {:meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 8, :column 14, :end-line 8, :end-column 19, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {push [[pushable tx-data context]]}}}, :protocol-symbol true, :name om.next.protocols/IPush, :file "resources/public/js/om/next/protocols.cljs", :end-column 19, :column 1, :line 8, :protocol-info {:methods {push [[pushable tx-data context]]}}, :info nil, :end-line 8, :impls #{}, :doc nil, :jsdoc ("@interface")}, schedule! {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 31, :column 4, :end-line 31, :end-column 13, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([reconciler]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/schedule!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 13, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc nil}, IPullAsync {:meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 11, :column 14, :end-line 11, :end-column 24, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {pull-async [[pullable selector context cb]]}}}, :protocol-symbol true, :name om.next.protocols/IPullAsync, :file "resources/public/js/om/next/protocols.cljs", :end-column 24, :column 1, :line 11, :protocol-info {:methods {pull-async [[pullable selector context cb]]}}, :info nil, :end-line 11, :impls #{}, :doc nil, :jsdoc ("@interface")}, push {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 9, :column 4, :end-line 9, :end-column 8, :protocol om.next.protocols/IPush, :doc nil, :arglists (quote ([pushable tx-data context]))}, :protocol om.next.protocols/IPush, :name om.next.protocols/push, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 8, :method-params ([pushable tx-data context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 9, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pushable tx-data context])), :doc nil}, IComponentIndex {:meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 17, :column 14, :end-line 17, :end-column 29, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {index-component! [[this component]], drop-component! [[this component]]}}}, :protocol-symbol true, :name om.next.protocols/IComponentIndex, :file "resources/public/js/om/next/protocols.cljs", :end-column 29, :column 1, :line 17, :protocol-info {:methods {index-component! [[this component]], drop-component! [[this component]]}}, :info nil, :end-line 17, :impls #{}, :doc nil, :jsdoc ("@interface")}, drop-component! {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 19, :column 4, :end-line 19, :end-column 19, :protocol om.next.protocols/IComponentIndex, :doc nil, :arglists (quote ([this component]))}, :protocol om.next.protocols/IComponentIndex, :name om.next.protocols/drop-component!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 19, :method-params ([this component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this component])), :doc nil}, props-for {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 28, :column 4, :end-line 28, :end-column 13, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([this component]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/props-for, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 13, :method-params ([this component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this component])), :doc nil}, store {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 26, :column 4, :end-line 26, :end-column 9, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([this]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/store, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, commit! {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 22, :column 4, :end-line 22, :end-column 11, :protocol om.next.protocols/ICommitQueue, :doc nil, :arglists (quote ([queue tx-data context]))}, :protocol om.next.protocols/ICommitQueue, :name om.next.protocols/commit!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 11, :method-params ([queue tx-data context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists (quote ([queue tx-data context])), :doc nil}, IPull {:meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 5, :column 14, :end-line 5, :end-column 19, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {pull [[pullable selector context]]}}}, :protocol-symbol true, :name om.next.protocols/IPull, :file "resources/public/js/om/next/protocols.cljs", :end-column 19, :column 1, :line 5, :protocol-info {:methods {pull [[pullable selector context]]}}, :info nil, :end-line 5, :impls #{}, :doc nil, :jsdoc ("@interface")}, IStore {:meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 3, :column 14, :end-line 3, :end-column 20, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {}}}, :protocol-symbol true, :name om.next.protocols/IStore, :file "resources/public/js/om/next/protocols.cljs", :end-column 20, :column 1, :line 3, :protocol-info {:methods {}}, :info nil, :end-line 3, :impls #{}, :doc nil, :jsdoc ("@interface")}, index-component! {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 18, :column 4, :end-line 18, :end-column 20, :protocol om.next.protocols/IComponentIndex, :doc nil, :arglists (quote ([this component]))}, :protocol om.next.protocols/IComponentIndex, :name om.next.protocols/index-component!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 20, :method-params ([this component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this component])), :doc nil}, reconcile! {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 32, :column 4, :end-line 32, :end-column 14, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([reconciler]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/reconcile!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 14, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc nil}, IReconciler {:meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 24, :column 14, :end-line 24, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {basis-t [[this]], store [[this]], indexes [[this]], props-for [[this component]], add-root! [[reconciler target root-class options]], remove-root! [[reconciler target]], schedule! [[reconciler]], reconcile! [[reconciler]]}}}, :protocol-symbol true, :name om.next.protocols/IReconciler, :file "resources/public/js/om/next/protocols.cljs", :end-column 25, :column 1, :line 24, :protocol-info {:methods {basis-t [[this]], store [[this]], indexes [[this]], props-for [[this component]], add-root! [[reconciler target root-class options]], remove-root! [[reconciler target]], schedule! [[reconciler]], reconcile! [[reconciler]]}}, :info nil, :end-line 24, :impls #{}, :doc nil, :jsdoc ("@interface")}, basis-t {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 25, :column 4, :end-line 25, :end-column 11, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([this]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/basis-t, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, add-root! {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 29, :column 4, :end-line 29, :end-column 13, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([reconciler target root-class options]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/add-root!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 13, :method-params ([reconciler target root-class options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 29, :max-fixed-arity 4, :fn-var true, :arglists (quote ([reconciler target root-class options])), :doc nil}, remove-root! {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 30, :column 4, :end-line 30, :end-column 16, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([reconciler target]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/remove-root!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 16, :method-params ([reconciler target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler target])), :doc nil}, pull-async {:protocol-inline nil, :meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 12, :column 4, :end-line 12, :end-column 14, :protocol om.next.protocols/IPullAsync, :doc nil, :arglists (quote ([pullable selector context cb]))}, :protocol om.next.protocols/IPullAsync, :name om.next.protocols/pull-async, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 14, :method-params ([pullable selector context cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 12, :max-fixed-arity 4, :fn-var true, :arglists (quote ([pullable selector context cb])), :doc nil}, IPushAsync {:meta {:file "/Users/conradbarski/blueprint-cljs/examples/kitchensink/resources/public/js/om/next/protocols.cljs", :line 14, :column 14, :end-line 14, :end-column 24, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {push-async [[pushable tx-data context cb]]}}}, :protocol-symbol true, :name om.next.protocols/IPushAsync, :file "resources/public/js/om/next/protocols.cljs", :end-column 24, :column 1, :line 14, :protocol-info {:methods {push-async [[pushable tx-data context cb]]}}, :info nil, :end-line 14, :impls #{}, :doc nil, :jsdoc ("@interface")}}, :require-macros nil, :doc nil}